/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ui.knjige;

import domain.Knjiga;
import domain.Primerak;
import java.util.List;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import models.TableModelKnjiga;
import models.TableModelPrimerak;

/**
 *
 * @author Dejan Colic
 */
public class FormaKnjige extends javax.swing.JFrame {

    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(FormaKnjige.class.getName());

    /**
     * Creates new form FormaKnjige
     */
    public FormaKnjige() {
        initComponents();
        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        setLocationRelativeTo(null);
        setTitle("Rad sa knjigama i primercima");
        loadKnjige();
        btnObrisi.setEnabled(false);

        btnIzmeni.setEnabled(false);

        tblKnjige.getSelectionModel().addListSelectionListener(e -> {
            boolean selected = tblKnjige.getSelectedRow() >= 0;
            btnIzmeni.setEnabled(selected);
        });

        // populate table primerak when kniga is selected
        tblKnjige.getSelectionModel().addListSelectionListener(e -> {
            int row = tblKnjige.getSelectedRow();
            if (row >= 0) {
                TableModelKnjiga model = (TableModelKnjiga) tblKnjige.getModel();
                Knjiga selected = model.getKnjigaAt(row);
                loadPrimerci(selected);
            }
        });

        tblKnjige.getSelectionModel().addListSelectionListener(e -> {
            boolean selected = tblKnjige.getSelectedRow() >= 0;
            btnObrisi.setEnabled(selected);
        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lblPretrazi = new javax.swing.JLabel();
        txtPretrazi = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblKnjige = new javax.swing.JTable();
        btnKreiraj = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        btnNazad = new javax.swing.JButton();
        btnPretrazi = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPrimerci = new javax.swing.JTable();
        lblUkupno = new javax.swing.JLabel();
        lblUkupnoBroj = new javax.swing.JLabel();
        lblDostupno = new javax.swing.JLabel();
        lblDostupnoBroj = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Rad sa knjigama i primercima"));

        lblPretrazi.setText("Pretrazi po autoru ili nazivu: ");

        tblKnjige.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblKnjige);

        btnKreiraj.setText("Kreiraj ");
        btnKreiraj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnKreirajActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        btnObrisi.setText("Obrisi ");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        btnNazad.setText("Nazad");
        btnNazad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNazadActionPerformed(evt);
            }
        });

        btnPretrazi.setText("Pretrazi");
        btnPretrazi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPretraziActionPerformed(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Lista primeraka za odabranu knjigu"));

        tblPrimerci.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(tblPrimerci);

        lblUkupno.setText("Ukupno primeraka : ");

        lblDostupno.setText("Dostupno primeraka :");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblDostupno)
                                .addGap(18, 18, 18)
                                .addComponent(lblDostupnoBroj))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(lblUkupno)
                                .addGap(28, 28, 28)
                                .addComponent(lblUkupnoBroj)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblUkupno)
                    .addComponent(lblUkupnoBroj))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblDostupno)
                    .addComponent(lblDostupnoBroj))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnKreiraj)
                        .addGap(48, 48, 48)
                        .addComponent(btnIzmeni)
                        .addGap(42, 42, 42)
                        .addComponent(btnObrisi)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNazad))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblPretrazi)
                        .addGap(51, 51, 51)
                        .addComponent(txtPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, 442, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 51, Short.MAX_VALUE)
                        .addComponent(btnPretrazi)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtPretrazi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnPretrazi))
                    .addComponent(lblPretrazi))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnKreiraj)
                    .addComponent(btnIzmeni)
                    .addComponent(btnObrisi)
                    .addComponent(btnNazad))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnNazadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNazadActionPerformed
        setVisible(false);
        dispose();
    }//GEN-LAST:event_btnNazadActionPerformed

    private void btnPretraziActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPretraziActionPerformed
        String term = txtPretrazi.getText().trim();
        try {
            List<Knjiga> knjige;
            if (term.isEmpty()) {
                knjige = controller.UIController.getInstance().getAllKnjiga();
            } else {
                knjige = controller.UIController.getInstance().searchKnjiga(term);
            }
            TableModelKnjiga model = new TableModelKnjiga(knjige);
            tblKnjige.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Greška prilikom pretrage knjiga: " + e.getMessage());
        }
    }//GEN-LAST:event_btnPretraziActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int row = tblKnjige.getSelectedRow();
        if (row < 0) {
            return;
        }

        TableModelKnjiga model = (TableModelKnjiga) tblKnjige.getModel();
        Knjiga selected = model.getKnjigaAt(row);

        int confirm = JOptionPane.showConfirmDialog(
                this,
                "Da li ste sigurni da želite da obrišete knjigu: " + selected.getNaziv() + "?",
                "Potvrda brisanja",
                JOptionPane.YES_NO_OPTION
        );

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                controller.UIController.getInstance().deleteKnjiga(selected);
                JOptionPane.showMessageDialog(this, "Knjiga je uspešno obrisana.");
                model.removeKnjiga(selected.getKnjigaID());
                tblPrimerci.setModel(new TableModelPrimerak(List.of()));
                lblUkupnoBroj.setText("0");
                lblDostupnoBroj.setText("0");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_btnObrisiActionPerformed

    private void btnKreirajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnKreirajActionPerformed
        TableModelKnjiga model = (TableModelKnjiga) tblKnjige.getModel();
        DijalogNovaKnjiga dialog = new DijalogNovaKnjiga(this, true, model, this);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnKreirajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        int row = tblKnjige.getSelectedRow();
        if (row < 0) {
            javax.swing.JOptionPane.showMessageDialog(this, "Izaberite knjigu za izmenu.");
            return;
        }
        TableModelKnjiga model = (TableModelKnjiga) tblKnjige.getModel();
        Knjiga selected = model.getKnjigaAt(row);
        DijalogNovaKnjiga dialog
                = new DijalogNovaKnjiga(this, true, model, this, selected);
        dialog.setVisible(true);
    }//GEN-LAST:event_btnIzmeniActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new FormaKnjige().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnKreiraj;
    private javax.swing.JButton btnNazad;
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnPretrazi;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblDostupno;
    private javax.swing.JLabel lblDostupnoBroj;
    private javax.swing.JLabel lblPretrazi;
    private javax.swing.JLabel lblUkupno;
    private javax.swing.JLabel lblUkupnoBroj;
    private javax.swing.JTable tblKnjige;
    private javax.swing.JTable tblPrimerci;
    private javax.swing.JTextField txtPretrazi;
    // End of variables declaration//GEN-END:variables

    public void loadKnjige() {
        try {
            List<Knjiga> knjige = controller.UIController.getInstance().getAllKnjiga();
            TableModelKnjiga model = new TableModelKnjiga(knjige);
            tblKnjige.setModel(model);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Greška prilikom učitavanja knjiga: " + e.getMessage());
        }
    }

    private void loadPrimerci(Knjiga knjiga) {
        try {
            List<Primerak> primerci = controller.UIController.getInstance().getPrimerciForKnjiga(knjiga);
            TableModelPrimerak model = new TableModelPrimerak(primerci);
            tblPrimerci.setModel(model);

            int total = controller.UIController.getInstance().countPrimerci(knjiga.getKnjigaID());
            int available = controller.UIController.getInstance().countAvailablePrimerci(knjiga.getKnjigaID());

            lblUkupnoBroj.setText(String.valueOf(total));
            lblDostupnoBroj.setText(String.valueOf(available));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Greška prilikom učitavanja primeraka: " + e.getMessage());
        }
    }

    public void refreshPrimerciLabelsForSelected() {
        int row = tblKnjige.getSelectedRow();
        if (row >= 0) {
            TableModelKnjiga knjigaModel = (TableModelKnjiga) tblKnjige.getModel();
            Knjiga selected = knjigaModel.getKnjigaAt(row);
            try {
                int total = controller.UIController.getInstance().countPrimerci(selected.getKnjigaID());
                int available = controller.UIController.getInstance().countAvailablePrimerci(selected.getKnjigaID());
                updatePrimerciLabels(total, available);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Greška prilikom osvežavanja broja primeraka.");
            }
        }
    }

    public void updatePrimerciLabels(int total, int available) {
        lblUkupnoBroj.setText(String.valueOf(total));
        lblDostupnoBroj.setText(String.valueOf(available));
    }

    public void selectLastKnjigaRow() {
        int lastRow = tblKnjige.getRowCount() - 1;
        if (lastRow >= 0) {
            tblKnjige.setRowSelectionInterval(lastRow, lastRow);
            tblKnjige.scrollRectToVisible(tblKnjige.getCellRect(lastRow, 0, true));
        }
    }

    public void selectKnjigaById(int knjigaID) {
        TableModelKnjiga model = (TableModelKnjiga) tblKnjige.getModel();
        for (int i = 0; i < model.getRowCount(); i++) {
            if (model.getKnjigaAt(i).getKnjigaID() == knjigaID) {
                tblKnjige.setRowSelectionInterval(i, i);
                tblKnjige.scrollRectToVisible(tblKnjige.getCellRect(i, 0, true));
                break;
            }
        }
    }

}
